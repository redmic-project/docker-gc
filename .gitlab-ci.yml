stages:
  - deploy
  - maintenance

image: ${DOCKER_DEPLOY_IMAGE_NAME}:${DOCKER_DEPLOY_IMAGE_TAG}

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2
  STACK: maintenance
  SERVICES_TO_CHECK: maintenance_${CI_PROJECT_NAME}
  IMAGE_TAG: latest

deploy-supporting-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev
  only:
    - branches
  except:
    - master
  when: manual

deploy-stable-branch-develop:
  stage: deploy
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.dev.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: dev
  only:
    - master
  when: manual

deploy-supporting-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro
  only:
    - branches
  except:
    - master
  when: manual

deploy-stable-branch-production:
  stage: deploy
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    COMPOSE_FILE: docker-compose.tmpl.yml:docker-compose.prod.yml
  script:
    - deploy.sh IMAGE_TAG=${IMAGE_TAG} COMPOSE_FILE=${COMPOSE_FILE}
  environment:
    name: pro
  only:
    - master
  when: manual

scheduled-run-stable-branch-develop:
  stage: maintenance
  variables:
    SSH_REMOTE: ${DEV_SSH_REMOTE}
    SERVICE: ${STACK}_${CI_PROJECT_NAME}
  script: relaunch.sh
  only:
    - schedules

scheduled-run-stable-branch-production:
  stage: maintenance
  variables:
    SSH_REMOTE: ${PRO_SSH_REMOTE}
    SERVICE: ${STACK}_${CI_PROJECT_NAME}
  script: relaunch.sh
  only:
    - schedules
